version: '3.9'
services:
  postgres: 
    image: postgres:15.2-alpine
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=seatmap
    ports:
      - 2345:5432
  
  elasticsearch:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.17.9'
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"

  logstash:
    build:
      context: logstash
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=seatmap
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    volumes:
      - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml
      - ./logstash/pipelines/:/usr/share/logstash/pipeline/
      - ./logstash/queries/:/usr/share/logstash/config/queries/
    depends_on:
      - postgres
      - elasticsearch
  # docker run -v ./logstash/queries/:/usr/share/logstash/config/queries/ -v ./logstash/pipelines/:/usr/share/logstash/pipeline/ -v ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml --name logstash1 --network seatmap-network -e POSTGRES_USER=root -e POSTGRES_PASSWORD=secret -e POSTGRES_DB=seatmap -e ELASTICSEARCH_URL=http://elasticsearch:9200 -d logs
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DB_SOURCE=postgresql://root:secret@postgres:5432/seatmap?sslmode=disable
    depends_on:
      - postgres
      - elasticsearch
    # entrypoint:
    #   [
    #     "/app/wait-for.sh",
    #     "postgres:5432",
    #     "elasticsearch:9200"
    #   ]
    command: [ "/app/main" ]
  
